#!/usr/bin/env bb 

(require '[babashka.curl :as curl])
(require '[cheshire.core :as json])
(require '[clojure.string :as string])

(def openai-api-key (->> "/.config/openai/apikey"
                         (str (System/getenv "HOME"))
                         slurp
                         string/trim))

(def options
  {"temperature" 0.4
   "max_tokens" 20
   "n" 5})

(def prompt-prefix (str "#!/usr/bin/env fish\n\n"))

;; TODO experiment with adding recent command history to prompt
(defn prompt [input]
  (str prompt-prefix input "(one-liner)" "\n"))

(defn request [input]
  {:body (json/encode (merge options {"prompt" (prompt input)}))
   :headers {"Content-Type" "application/json"
             "Authorization" (str "Bearer " openai-api-key)}
   :debug true})

(defn trim-extra-lines [s]
  (string/replace s #"\n+.*$" ""))

;; TODO remove duplicates
;; TODO more reliably trim extra lines
(defn completions [input]
  (-> (curl/post "https://api.openai.com/v1/engines/code-davinci-002/completions"
                 (request input))
      :body
      (json/parse-string true)
      :choices
      (->> (map #(-> % :text trim-extra-lines)))))

(defn print-completions [input]
  (->> input
       completions 
       (string/join "\n")
       print))

(when *command-line-args*
  (-> *command-line-args*
      first
      print-completions))

(comment 

  (completions "# find all files ending in '.pdf' with 'foo' in their name")

  )

;; vim: ft=clojure

#+EXPORT_FILE_NAME: index.html
#+BEGIN_EXPORT html
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-25415440-8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-25415440-8');
</script>
#+END_EXPORT
* Dotfiles
** curlrc
#+begin_src conf :tangle curlrc
cacert=/etc/ssl/certs/ca-certificates.crt
#+end_src
** inputrc
#+begin_src conf :tangle inputrc
set completion-ignore-case on
#+end_src
** Languages
*** Node
**** npmrc
#+begin_src conf :tangle npmrc
prefix = ${NPM_PACKAGES}
#+end_src
**** Packages Path
#+NAME: zshenv-npm-packages
#+begin_src sh
export NPM_PACKAGES="$HOME/.npm-packages"
if [[ -e "$NPM_PACKAGES" ]]; then
    path=($NPM_PACKAGES/bin $path)
fi
#+end_src
*** Ruby
**** gemrc
#+begin_src conf :tangle gemrc
gem: --no-rdoc --no-ri
#+end_src
** Shell
**** zshenv
#+begin_src sh :noweb yes :tangle zshenv
###############################################################################
### Misc

export EDITOR="vim"
export HOSTNAME="$(hostname -s)"
export MOSH_SERVER_NETWORK_TMOUT=259200
export LPASS_AGENT_TIMEOUT=64800

typeset -U path

###############################################################################
### Direnv

if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

###############################################################################
### Nix

if [[ -e "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
    . "${HOME}/.nix-profile/etc/profile.d/nix.sh"
fi

###############################################################################
### Node

<<zshenv-npm-packages>>

###############################################################################
### Path

if [[ -e ~/.local/bin ]]; then
    path=(~/.local/bin $path)
fi

if [[ -e ~/Scripts ]]; then
    path=(~/Scripts $path)
fi

###############################################################################
### Private

if [[ -e ~/.zshenv-private ]]; then
    source ~/.zshenv-private
fi
#+end_src
** Desktop
*** Org Protocol
#+begin_src conf :tangle tag-desktop/local/share/applications/org-protocol.desktop
[Desktop Entry]
Name=org-protocol
Exec=emacsclient %u
Type=Application
Terminal=false
Categories=System;
MimeType=x-scheme-handler/org-protocol;
#+end_src
** Table Babel + Tangle Experiment
#+TBLNAME: dirs
| Var   | Dir       |
|-------+-----------|
| docs  | Documents |
| repos | Work      |

#+NAME: dir-vars
#+BEGIN_SRC emacs-lisp :var dir-rows=dirs :results output
;;(dolist (dir-row dir-rows)
;;  (let ((v (first dir-row))
;;        (d (second dir-row)))
;;    (princ (concat "(setq dir-" v " \"" d  "\")\n"))))
#+END_SRC

#+RESULTS: dir-vars
: (setq dir-docs "Documents")
: (setq dir-repos "Work")

#+NAME: var-lookup
#+BEGIN_SRC emacs-lisp :var var='dir-docs :noweb yes
;;<<dir-vars()>>
;;(symbol-value var)
#+END_SRC

#+RESULTS: var-lookup
: Documents
